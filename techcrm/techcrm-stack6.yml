version: "3.8"

services:
  postgres-db:
    image: techakademi/crmdb:1
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 100M
        reservations:
          cpus: '0.25'
          memory: 50M
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        monitor: 60s
        failure_action: rollback
      rollback_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 40s
      placement:
          constraints: [node.role == manager]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 50s
      interval: 40s
      timeout: 10s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=dbroot
      - POSTGRES_PASSWORD=rootman
    networks:
      - techcrm
   
  nginx:
    image: techakademi/crmnginx:1
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 100M
        reservations:
          cpus: '0.25'
          memory: 50M
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        monitor: 60s
        failure_action: rollback
      rollback_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 40s
      placement:
        constraints: [node.role == manager]
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost || exit 1"]
      start_period: 50s
      interval: 40s
      timeout: 10s
      retries: 3
    ports:
      - "90:80"
    networks:
      - techcrm
    depends_on:
      - web
  
  web:
    image: techakademi/crm:3
    deploy:
      replicas: 4
      resources:
        limits:
          cpus: '0.25'
          memory: 100M
        reservations:
          cpus: '0.25'
          memory: 50M
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        monitor: 60s
        failure_action: rollback
      rollback_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 40s 
      placement:
          constraints: [node.role == worker]
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost:5000 || exit 1"]
      start_period: 50s
      interval: 40s
      timeout: 10s
      retries: 3
    networks:
      - techcrm
    depends_on:
      - postgres-db

volumes:
  postgres_data:
      driver: local
  pgadmin:

networks:
  techcrm:
    external: true