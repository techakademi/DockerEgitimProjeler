version: "3.8"

services:
  postgres-db:
    image: techakademi/crmdb:1
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 100M
        reservations:
          cpus: '0.25'
          memory: 50M
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        monitor: 60s
        failure_action: rollback
      rollback_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 40s
      placement:
          constraints: [node.role == manager]
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER_FILE=/run/secrets/pgr_dbuser
      - POSTGRES_PASSWORD_FILE=/run/secrets/pgr_dbpass
    secrets:
      - pgr_dbuser
      - pgr_dbpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 50s
      interval: 40s
      timeout: 10s
      retries: 3
    networks:
      - infra

  web:
    image: techakademi/crm:3
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 100M
        reservations:
          cpus: '0.25'
          memory: 50M
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        monitor: 60s
        failure_action: rollback
      rollback_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 40s 
      placement:
          constraints: [node.role == worker]
    healthcheck:
      test: ["CMD", "stat", "manage.py"]
      start_period: 50s
      interval: 40s
      timeout: 10s
      retries: 3
    networks:
      - infra
    depends_on:
      - postgres-db

  nginx:
    image: techakademi/crmnginx:2
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 100M
        reservations:
          cpus: '0.25'
          memory: 50M
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        monitor: 60s
        failure_action: rollback
      rollback_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 40s
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.techakademicrm.rule=Host(`www.techakademicrm.com`)"
        - "traefik.http.routers.techakademicrm.entrypoints=web"
        - "traefik.http.services.techakademicrm.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost/"]
      start_period: 1.5m
      interval: 1m
      timeout: 55s
      retries: 10
    logging:
      driver: fluentd
      options:
        tag: techakademicrm.com
    networks:
      - infra
    depends_on:
      - web      
  

volumes:
  postgres_data:
      driver: local
  pgadmin:

secrets:
  pgr_dbuser:
    external: true
  pgr_dbpass:
    external: true

networks:
  infra:
    external: true

